{"version":3,"sources":["App.js","index.js"],"names":["Screen","res","className","mode","max","Button","onClick","value","btnValues","toLocaleString","x","sep","grp","i","j","sx","split","s","length","slice","join","removeSpaces","num","toString","replace","App","useState","sign","calc","setCalc","numClick","e","target","innerHTML","includes","invert","percent","parseFloat","Math","pow","reset","result","a","b","Number","total","arithmetics","flat","map","btn","key","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.946b336b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Textfit } from \"react-textfit\";\nimport \"./App.css\";\n\nconst Screen = ({ res }) => {\n  return (\n    <Textfit className=\"screen-wrapper\" mode=\"single\" max={70}>\n      {res}\n    </Textfit>\n  );\n};\n\nconst Button = ({ className, onClick, value }) => {\n  return (\n    <button className={className} onClick={onClick}>\n      {value}\n    </button>\n  );\n};\n\nconst btnValues = [\n  [\"C\", \"+-\", \"%\", \"/\"],\n  [7, 8, 9, \"X\"],\n  [4, 5, 6, \"-\"],\n  [1, 2, 3, \"+\"],\n  [0, \".\", \"=\"],\n];\n\nconst toLocaleString = (x, sep, grp) => {\n  var sx = (\"\" + x).split(\".\"),\n    s = \"\",\n    i,\n    j;\n  sep || (sep = \" \");\n  grp || grp === 0 || (grp = 3);\n  i = sx[0].length;\n  while (i > grp) {\n    j = i - grp;\n    s = sep + sx[0].slice(j, i) + s;\n    i = j;\n  }\n  s = sx[0].slice(0, i) + s;\n  sx[0] = s;\n  return sx.join(\".\");\n};\n\nconst removeSpaces = (num) => num.toString().replace(/\\s/g, \"\");\n\nconst App = () => {\n  let [calc, setCalc] = useState({\n    sign: \"\",\n    num: 0,\n    res: 0,\n  });\n\n  const numClick = (e) => {\n    const value = e.target.innerHTML;\n    if (\n      (calc.num === \"0\" && value === \"0\") || //avoid entering 00034\n      (calc.num.toString().includes(\".\") && value === \".\") || //avoid entering 0..34\n      (calc.res && !calc.num && value === \".\") //avoid adding comma in the result\n    )\n      return;\n\n    if (!calc.sign) {\n      calc.res = 0; //reset after equal press\n    }\n\n    if (removeSpaces(calc.num).length < 16) {\n      setCalc({\n        ...calc,\n        num:\n          !calc.num && value === \".\" // format to 0. if . pressed first\n            ? \"0.\"\n            : calc.num && value === \".\" // add comma for number\n            ? calc.num + \".\"\n            : toLocaleString(\n                (!calc.num || calc.num === \"0\" ? value : (calc.num += value))\n                  .toString()\n                  .replace(/\\s/g, \"\")\n              ),\n      });\n    }\n  };\n\n  const invert = () => {\n    setCalc({\n      ...calc,\n      num: calc.num ? toLocaleString(removeSpaces(calc.num) * -1) : 0,\n      res: calc.res ? toLocaleString(removeSpaces(calc.res) * -1) : 0,\n      sign: \"\",\n    });\n  };\n\n  const percent = () => {\n    let num = calc.num ? parseFloat(removeSpaces(calc.num)) : 0;\n    let res = calc.res ? parseFloat(removeSpaces(calc.res)) : 0;\n    setCalc({\n      ...calc,\n      num: (num /= Math.pow(100, 1)),\n      res: (res /= Math.pow(100, 1)),\n      sign: \"\",\n    });\n  };\n\n  const reset = () => {\n    setCalc({\n      ...calc,\n      sign: \"\",\n      num: 0,\n      res: 0,\n    });\n  };\n\n  const result = () => {\n    const [conNum, conRes] = [\n      Number(calc.sign && calc.num ? removeSpaces(calc.num) : 0),\n      Number(calc.res ? removeSpaces(calc.res) : 0),\n    ];\n\n    const math = (a, b, sign) =>\n      sign === \"+\"\n        ? a + b\n        : sign === \"-\"\n        ? a - b\n        : sign === \"X\"\n        ? a * b\n        : a / b;\n\n    const total = math(conRes, conNum, calc.sign);\n    if (calc.sign && calc.num) {\n      //to prevent repetitive equals press\n      setCalc({\n        ...calc,\n        res:\n          calc.num === \"0\" && calc.sign === \"/\"\n            ? \"Can't divide with 0\"\n            : toLocaleString(total),\n        num:\n          !calc.res ||\n          (!calc.res && calc.sign === \"X\") ||\n          (!calc.res && calc.sign === \"/\")\n            ? calc.num\n            : 0,\n        sign: \"\",\n      });\n    }\n\n    if (calc.num && calc.sign.length === 1) return total;\n  };\n\n  const arithmetics = (e) => {\n    setCalc({\n      ...calc,\n      sign: e.target.innerHTML,\n      res:\n        !calc.res && calc.num\n          ? toLocaleString(Number(removeSpaces(calc.num)))\n          : calc.res && calc.num && calc.sign\n          ? toLocaleString(result()) //2+2+2 without equal\n          : calc.res, //for repetitive arithmetic presses\n      num: 0,\n    });\n  };\n\n  return (\n    <div className=\"calc-wrapper\">\n      <Screen res={calc.num ? calc.num : calc.res} />\n      <div className=\"button-wrapper\">\n        {btnValues.flat().map((btn, i) => {\n          return (\n            <Button\n              key={i}\n              className={btn === \"=\" ? \"equals\" : \"\"}\n              value={btn}\n              onClick={\n                btn === \"C\"\n                  ? reset\n                  : btn === \"+-\"\n                  ? invert\n                  : btn === \"%\"\n                  ? percent\n                  : btn === \"=\"\n                  ? result\n                  : btn === \"/\" || btn === \"X\" || btn === \"-\" || btn === \"+\"\n                  ? arithmetics\n                  : numClick\n              }\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}